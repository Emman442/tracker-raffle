{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dev/tracker-raffle/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dev/tracker-raffle/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dev/tracker-raffle/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dev/tracker-raffle/anchor/src/token_lottery-exports.ts"],"sourcesContent":["// Here we export some useful types and functions for interacting with the Anchor program.\r\nimport { AnchorProvider, Program } from '@coral-xyz/anchor'\r\nimport { Cluster, PublicKey } from '@solana/web3.js'\r\nimport tokenLotteryIDL from '../target/idl/token_lottery.json'\r\nimport type { Raffle } from '../target/types/token_lottery'\r\n\r\n// Re-export the generated IDL and type\r\nexport { Raffle, tokenLotteryIDL }\r\n\r\n// The programId is imported from the program IDL.\r\nexport const TOKEN_LOTTERY_PROGRAM_ID = new PublicKey(tokenLotteryIDL.address)\r\n\r\n// This is a helper function to get the Counter Anchor program.\r\nexport function getTokenLotteryProgram(provider: AnchorProvider, address?: PublicKey) {\r\n    return new Program({ ...tokenLotteryIDL, address: address ? address.toBase58() : tokenLotteryIDL.address } as Raffle, provider)\r\n}\r\n\r\n// This is a helper function to get the program ID for the Counter program depending on the cluster.\r\nexport function gettokenLotteryId(cluster: Cluster) {\r\n    switch (cluster) {\r\n        case 'devnet':\r\n        case 'testnet':\r\n            // This is the program ID for the Counter program on devnet and testnet.\r\n            return new PublicKey(\"47EsfkJnYeZVuf3WTfzE5a2V5RSnaHm3GhTs8QcA3ah8b\")\r\n        case 'mainnet-beta':\r\n        default:\r\n            return TOKEN_LOTTERY_PROGRAM_ID\r\n    }\r\n}"],"names":[],"mappings":"AAAA,0FAA0F;;;;;;AAC1F;AAAA;AACA;AACA;;;;;AAOO,MAAM,2BAA2B,IAAI,6JAAA,CAAA,YAAS,CAAC,gHAAA,CAAA,UAAe,CAAC,OAAO;AAGtE,SAAS,uBAAuB,QAAwB,EAAE,OAAmB;IAChF,OAAO,IAAI,2LAAA,CAAA,UAAO,CAAC;QAAE,GAAG,gHAAA,CAAA,UAAe;QAAE,SAAS,UAAU,QAAQ,QAAQ,KAAK,gHAAA,CAAA,UAAe,CAAC,OAAO;IAAC,GAAa;AAC1H;AAGO,SAAS,kBAAkB,OAAgB;IAC9C,OAAQ;QACJ,KAAK;QACL,KAAK;YACD,wEAAwE;YACxE,OAAO,IAAI,6JAAA,CAAA,YAAS,CAAC;QACzB,KAAK;QACL;YACI,OAAO;IACf;AACJ","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dev/tracker-raffle/anchor/src/index.ts"],"sourcesContent":["export * from './token_lottery-exports';"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dev/tracker-raffle/src/hooks/use-program.tsx"],"sourcesContent":["import { useMemo } from \"react\";\r\nimport { AnchorProvider, Idl, Program } from \"@coral-xyz/anchor\";\r\nimport { useAnchorWallet, useConnection } from \"@solana/wallet-adapter-react\";\r\nimport { TokenLottery, tokenLotteryIDL } from \"../../anchor/src\";\r\n\r\nexport const useProgram = () => {\r\n  const wallet = useAnchorWallet();\r\n  const { connection } = useConnection();\r\n  const { program, provider } = useMemo(() => {\r\n    if (!wallet?.publicKey) return { program: null, provider: null };\r\n\r\n    const provider = new AnchorProvider(connection, wallet, {\r\n      commitment: \"confirmed\",\r\n    });\r\n\r\n    const program = new Program<TokenLottery>(tokenLotteryIDL, provider);\r\n\r\n    return { program, provider };\r\n  }, [connection, wallet]);\r\n\r\n  return { program, provider };\r\n};\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEO,MAAM,aAAa;IACxB,MAAM,SAAS,CAAA,GAAA,uLAAA,CAAA,kBAAe,AAAD;IAC7B,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,qLAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACpC,IAAI,CAAC,QAAQ,WAAW,OAAO;YAAE,SAAS;YAAM,UAAU;QAAK;QAE/D,MAAM,WAAW,IAAI,mKAAA,CAAA,iBAAc,CAAC,YAAY,QAAQ;YACtD,YAAY;QACd;QAEA,MAAM,UAAU,IAAI,2LAAA,CAAA,UAAO,CAAe,8JAAA,CAAA,kBAAe,EAAE;QAE3D,OAAO;YAAE;YAAS;QAAS;IAC7B,GAAG;QAAC;QAAY;KAAO;IAEvB,OAAO;QAAE;QAAS;IAAS;AAC7B","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dev/tracker-raffle/src/constants/constants.ts"],"sourcesContent":["import * as anchor from \"@coral-xyz/anchor\"\r\nexport const TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\r\nexport const TOKEN_MINT = new anchor.web3.PublicKey(\"4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU\")\r\nexport const ADMIN = new anchor.web3.PublicKey(\"4yvqzETHwi9nYqJdHP2sFkBRSU58Dx7AmNk3yzEVqk9p\")\r\nexport const TOKEN_MINT_DECIMALS = 9;"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AACO,MAAM,4BAA4B,IAAI,6LAAA,CAAA,OAAW,CAAC,SAAS,CAAC;AAC5D,MAAM,aAAa,IAAI,6LAAA,CAAA,OAAW,CAAC,SAAS,CAAC;AAC7C,MAAM,QAAQ,IAAI,6LAAA,CAAA,OAAW,CAAC,SAAS,CAAC;AACxC,MAAM,sBAAsB","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dev/tracker-raffle/src/components/ClaimPrizeCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Award, Loader2 } from \"lucide-react\";\r\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useProgram } from \"@/hooks/use-program\";\r\nimport * as anchor from \"@coral-xyz/anchor\";\r\nimport { toast } from \"sonner\";\r\nimport { TOKEN_METADATA_PROGRAM_ID, TOKEN_MINT, TOKEN_MINT_DECIMALS } from \"@/constants/constants\";\r\nimport {\r\n  getAssociatedTokenAddressSync,\r\n  TOKEN_PROGRAM_ID,\r\n} from \"@solana/spl-token\";\r\n\r\nexport default function ClaimPrizeCard() {\r\n  const { connected, publicKey } = useWallet();\r\n  const { connection } = useConnection();\r\n  const { program } = useProgram();\r\n\r\n  const [isClaimingPrize, setIsClaimingPrize] = useState(false);\r\n  const [isWinner, setIsWinner] = useState(false);\r\n  const [lotteryData, setLotteryData] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Compute the TokenLottery PDA once\r\n  const [tokenLotteryPda] = PublicKey.findProgramAddressSync(\r\n    [Buffer.from(\"token_lottery\")],\r\n    program?.programId ?? PublicKey.default\r\n  );\r\n\r\n  /** 🔍 Fetch lottery data and check if user is winner */\r\n  useEffect(() => {\r\n    const fetchLotteryData = async () => {\r\n      if (!program || !publicKey) return;\r\n\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Fetch the TokenLottery account\r\n        const tokenLottery = await program.account.tokenLottery.fetch(\r\n          tokenLotteryPda\r\n        );\r\n        setLotteryData(tokenLottery);\r\n\r\n        // No winner chosen yet\r\n        if (!tokenLottery.winnerChosen) {\r\n          setIsWinner(false);\r\n          return;\r\n        }\r\n\r\n        // Derive the winning ticket mint PDA\r\n        const [ticketMint] = anchor.web3.PublicKey.findProgramAddressSync(\r\n          [\r\n            Buffer.from(\r\n              new anchor.BN(tokenLottery.winner).toArrayLike(Buffer, \"le\", 8)\r\n            ),\r\n          ],\r\n          program.programId\r\n        );\r\n\r\n        // Compute user's associated token account (ATA)\r\n        const ata = getAssociatedTokenAddressSync(ticketMint, publicKey);\r\n\r\n        // Check if this ATA has a token balance\r\n        const accountInfo = await connection\r\n          .getTokenAccountBalance(ata)\r\n          .catch(() => null);\r\n\r\n        if (accountInfo && Number(accountInfo.value.amount) > 0) {\r\n          setIsWinner(true);\r\n        } else {\r\n          setIsWinner(false);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching lottery or token account:\", err);\r\n        setIsWinner(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchLotteryData();\r\n  }, [program, publicKey, connection]);\r\n\r\n  /** 💰 Handle claim winnings */\r\n  const handleClaimWinnings = async () => {\r\n    if (!program || !publicKey) {\r\n      toast.error(\"Please connect your wallet\");\r\n      return;\r\n    }\r\n\r\n    setIsClaimingPrize(true);\r\n    try {\r\n      const tokenLottery = await program.account.tokenLottery.fetch(\r\n        tokenLotteryPda\r\n      );\r\n\r\n      const [ticketMint] = anchor.web3.PublicKey.findProgramAddressSync(\r\n        [\r\n          Buffer.from(\r\n            new anchor.BN(tokenLottery.winner).toArrayLike(Buffer, \"le\", 8)\r\n          ),\r\n        ],\r\n        program.programId\r\n      );\r\n\r\n      const [ticketMetadata] = anchor.web3.PublicKey.findProgramAddressSync(\r\n        [\r\n          Buffer.from(\"metadata\"),\r\n          TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n          ticketMint.toBuffer(),\r\n        ],\r\n        TOKEN_METADATA_PROGRAM_ID\r\n      );\r\n\r\n      const destination = getAssociatedTokenAddressSync(ticketMint, publicKey);\r\n      const vaultTokenAccount = getAssociatedTokenAddressSync(\r\n        TOKEN_MINT,\r\n        tokenLotteryPda,\r\n        true\r\n      );\r\n\r\n      const tx = await program.methods\r\n        .claimWinnings()\r\n        .accounts({\r\n          payer: publicKey,\r\n          winnerTokenAccount: destination,\r\n          metadata: ticketMetadata,\r\n          destination,\r\n          ticketMint,\r\n          tokenLottery: tokenLotteryPda,\r\n          rewardMint: TOKEN_MINT,\r\n          rewardVault: vaultTokenAccount,\r\n          tokenProgram: TOKEN_PROGRAM_ID,\r\n          systemProgram: anchor.web3.SystemProgram.programId,\r\n        })\r\n        .rpc();\r\n\r\n      toast.success(\"Winnings Claimed Successfully!\", {\r\n        cancel: {\r\n          label: \"View Transaction\",\r\n          onClick: () => window.open(`https://solscan.io/tx/${tx}`, \"_blank\"),\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Error claiming winnings:\", err);\r\n      toast.error(\"Something went wrong while claiming winnings.\");\r\n    } finally {\r\n      setIsClaimingPrize(false);\r\n    }\r\n  };\r\n\r\n  /** 🎨 Animation variants */\r\n  const cardVariants = {\r\n    hidden: { opacity: 0, y: 50 },\r\n    visible: { opacity: 1, y: 0 },\r\n  };\r\n\r\n  /** 🧠 Conditional render */\r\n  const renderContent = () => {\r\n    if (!connected) {\r\n      return (\r\n        <p className=\"text-center text-muted-foreground\">\r\n          Please connect your wallet.\r\n        </p>\r\n      );\r\n    }\r\n\r\n    if (loading) {\r\n      return (\r\n        <p className=\"text-center text-muted-foreground\">\r\n          Loading lottery info...\r\n        </p>\r\n      );\r\n    }\r\n\r\n    if (!lotteryData) {\r\n      return (\r\n        <p className=\"text-center text-muted-foreground\">\r\n          Lottery has not been initialized or started yet.\r\n        </p>\r\n      );\r\n    }\r\n\r\n    if (!lotteryData.winnerChosen) {\r\n      return (\r\n        <p className=\"text-center text-muted-foreground\">\r\n          A winner has not been chosen yet.\r\n        </p>\r\n      );\r\n    }\r\n\r\n    if (isWinner) {\r\n      return (\r\n        <div className=\"text-center space-y-4\">\r\n          <p className=\"text-lg text-green-400\">\r\n            🎉 Congratulations! You are the winner!\r\n          </p>\r\n          <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n            <Button\r\n              onClick={handleClaimWinnings}\r\n              disabled={isClaimingPrize}\r\n              className=\"w-full text-lg py-6 bg-gradient-to-r from-primary to-accent text-primary-foreground\"\r\n            >\r\n              {isClaimingPrize ? (\r\n                <Loader2 className=\"animate-spin\" />\r\n              ) : (\r\n                `Claim ${(\r\n                  Number(lotteryData.potAmount) / TOKEN_MINT_DECIMALS\r\n                ).toFixed(2)} TRACKER`\r\n              )}\r\n            </Button>\r\n          </motion.div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <p className=\"text-center text-muted-foreground\">\r\n        You are not the winner of this lottery. Better luck next time!\r\n      </p>\r\n    );\r\n  };\r\n\r\n  /** 🧱 Render card */\r\n  return (\r\n    <motion.div\r\n      variants={cardVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      transition={{ duration: 0.5, ease: \"easeOut\" }}\r\n    >\r\n      <Card className=\"max-w-md mx-auto\">\r\n        <CardHeader className=\"text-center\">\r\n          <div className=\"mx-auto bg-accent/10 p-3 rounded-full w-fit\">\r\n            <Award className=\"h-8 w-8 text-accent\" />\r\n          </div>\r\n          <CardTitle className=\"mt-4 text-3xl\">Prize Claim</CardTitle>\r\n          <CardDescription>\r\n            The total prize pool is{\" \"}\r\n            <span className=\"font-bold text-primary\">\r\n              {lotteryData\r\n                ? (Number(lotteryData.potAmount) / LAMPORTS_PER_SOL).toFixed(2)\r\n                : \"--\"}{\" \"}\r\n              SOL\r\n            </span>\r\n            .\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>{renderContent()}</CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAOA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAnBA;;;;;;;;;;;;;;AAwBe,SAAS;IACtB,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD;IACzC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,qLAAA,CAAA,gBAAa,AAAD;IACnC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IACpD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,oCAAoC;IACpC,MAAM,CAAC,gBAAgB,GAAG,6JAAA,CAAA,YAAS,CAAC,sBAAsB,CACxD;QAAC,OAAO,IAAI,CAAC;KAAiB,EAC9B,SAAS,aAAa,6JAAA,CAAA,YAAS,CAAC,OAAO;IAGzC,sDAAsD,GACtD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,mBAAmB;YACvB,IAAI,CAAC,WAAW,CAAC,WAAW;YAE5B,IAAI;gBACF,WAAW;gBAEX,iCAAiC;gBACjC,MAAM,eAAe,MAAM,QAAQ,OAAO,CAAC,YAAY,CAAC,KAAK,CAC3D;gBAEF,eAAe;gBAEf,uBAAuB;gBACvB,IAAI,CAAC,aAAa,YAAY,EAAE;oBAC9B,YAAY;oBACZ;gBACF;gBAEA,qCAAqC;gBACrC,MAAM,CAAC,WAAW,GAAG,6LAAA,CAAA,OAAW,CAAC,SAAS,CAAC,sBAAsB,CAC/D;oBACE,OAAO,IAAI,CACT,IAAI,sKAAA,CAAA,KAAS,CAAC,aAAa,MAAM,EAAE,WAAW,CAAC,QAAQ,MAAM;iBAEhE,EACD,QAAQ,SAAS;gBAGnB,gDAAgD;gBAChD,MAAM,MAAM,CAAA,GAAA,uKAAA,CAAA,gCAA6B,AAAD,EAAE,YAAY;gBAEtD,wCAAwC;gBACxC,MAAM,cAAc,MAAM,WACvB,sBAAsB,CAAC,KACvB,KAAK,CAAC,IAAM;gBAEf,IAAI,eAAe,OAAO,YAAY,KAAK,CAAC,MAAM,IAAI,GAAG;oBACvD,YAAY;gBACd,OAAO;oBACL,YAAY;gBACd;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,4CAA4C;gBAC1D,YAAY;YACd,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;QAAS;QAAW;KAAW;IAEnC,6BAA6B,GAC7B,MAAM,sBAAsB;QAC1B,IAAI,CAAC,WAAW,CAAC,WAAW;YAC1B,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,mBAAmB;QACnB,IAAI;YACF,MAAM,eAAe,MAAM,QAAQ,OAAO,CAAC,YAAY,CAAC,KAAK,CAC3D;YAGF,MAAM,CAAC,WAAW,GAAG,6LAAA,CAAA,OAAW,CAAC,SAAS,CAAC,sBAAsB,CAC/D;gBACE,OAAO,IAAI,CACT,IAAI,sKAAA,CAAA,KAAS,CAAC,aAAa,MAAM,EAAE,WAAW,CAAC,QAAQ,MAAM;aAEhE,EACD,QAAQ,SAAS;YAGnB,MAAM,CAAC,eAAe,GAAG,6LAAA,CAAA,OAAW,CAAC,SAAS,CAAC,sBAAsB,CACnE;gBACE,OAAO,IAAI,CAAC;gBACZ,6HAAA,CAAA,4BAAyB,CAAC,QAAQ;gBAClC,WAAW,QAAQ;aACpB,EACD,6HAAA,CAAA,4BAAyB;YAG3B,MAAM,cAAc,CAAA,GAAA,uKAAA,CAAA,gCAA6B,AAAD,EAAE,YAAY;YAC9D,MAAM,oBAAoB,CAAA,GAAA,uKAAA,CAAA,gCAA6B,AAAD,EACpD,6HAAA,CAAA,aAAU,EACV,iBACA;YAGF,MAAM,KAAK,MAAM,QAAQ,OAAO,CAC7B,aAAa,GACb,QAAQ,CAAC;gBACR,OAAO;gBACP,oBAAoB;gBACpB,UAAU;gBACV;gBACA;gBACA,cAAc;gBACd,YAAY,6HAAA,CAAA,aAAU;gBACtB,aAAa;gBACb,cAAc,mKAAA,CAAA,mBAAgB;gBAC9B,eAAe,6LAAA,CAAA,OAAW,CAAC,aAAa,CAAC,SAAS;YACpD,GACC,GAAG;YAEN,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC,kCAAkC;gBAC9C,QAAQ;oBACN,OAAO;oBACP,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,sBAAsB,EAAE,IAAI,EAAE;gBAC5D;YACF;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,mBAAmB;QACrB;IACF;IAEA,0BAA0B,GAC1B,MAAM,eAAe;QACnB,QAAQ;YAAE,SAAS;YAAG,GAAG;QAAG;QAC5B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;IAC9B;IAEA,0BAA0B,GAC1B,MAAM,gBAAgB;QACpB,IAAI,CAAC,WAAW;YACd,qBACE,8OAAC;gBAAE,WAAU;0BAAoC;;;;;;QAIrD;QAEA,IAAI,SAAS;YACX,qBACE,8OAAC;gBAAE,WAAU;0BAAoC;;;;;;QAIrD;QAEA,IAAI,CAAC,aAAa;YAChB,qBACE,8OAAC;gBAAE,WAAU;0BAAoC;;;;;;QAIrD;QAEA,IAAI,CAAC,YAAY,YAAY,EAAE;YAC7B,qBACE,8OAAC;gBAAE,WAAU;0BAAoC;;;;;;QAIrD;QAEA,IAAI,UAAU;YACZ,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;kCAAyB;;;;;;kCAGtC,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;wBAAC,YAAY;4BAAE,OAAO;wBAAK;wBAAG,UAAU;4BAAE,OAAO;wBAAK;kCAC/D,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BACL,SAAS;4BACT,UAAU;4BACV,WAAU;sCAET,gCACC,8OAAC,iNAAA,CAAA,UAAO;gCAAC,WAAU;;;;;uCAEnB,CAAC,MAAM,EAAE,CACP,OAAO,YAAY,SAAS,IAAI,6HAAA,CAAA,sBAAmB,AACrD,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC;;;;;;;;;;;;;;;;;QAMlC;QAEA,qBACE,8OAAC;YAAE,WAAU;sBAAoC;;;;;;IAIrD;IAEA,mBAAmB,GACnB,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QACT,UAAU;QACV,SAAQ;QACR,SAAQ;QACR,YAAY;YAAE,UAAU;YAAK,MAAM;QAAU;kBAE7C,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;;;;;;sCAEnB,8OAAC,gIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAgB;;;;;;sCACrC,8OAAC,gIAAA,CAAA,kBAAe;;gCAAC;gCACS;8CACxB,8OAAC;oCAAK,WAAU;;wCACb,cACG,CAAC,OAAO,YAAY,SAAS,IAAI,6JAAA,CAAA,mBAAgB,EAAE,OAAO,CAAC,KAC3D;wCAAM;wCAAI;;;;;;;gCAET;;;;;;;;;;;;;8BAIX,8OAAC,gIAAA,CAAA,cAAW;8BAAE;;;;;;;;;;;;;;;;;AAItB","debugId":null}}]
}